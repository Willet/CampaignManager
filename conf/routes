# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#
# Authentication Routes
#
# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized
#
# Stores/Brands/Companies
#
GET     /api/stores              controllers.Stores.index
GET     /api/stores/:id          controllers.Stores.show(id:Long)

#POST    /api/stores              controllers.Stores.add

#GET     /api/stores/:id/edit     controllers.Stores.edit(id:Long)
#POST    /api/stores/:id          controllers.Stores.update(id:Long)

GET     /api/stores/:store_id/content       controllers.Content.index(store_id:Long)
GET     /api/stores/:store_id/content/:id   controllers.Content.show(store_id:Long, id:Long)
PUT     /api/stores/:store_id/content/:id   controllers.Content.update(store_id:Long, id:Long)

GET     /api/stores/:store_id/products        controllers.Products.index(store_id:Long)
GET     /api/stores/:store_id/products/:id    controllers.Products.show(store_id:Long, id:Long)
PUT     /api/stores/:store_id/products/:id    controllers.Products.update(store_id:Long, id:Long)

GET     /api/stores/:store_id/campaigns       controllers.Campaigns.index(store_id:Long)
GET     /api/stores/:store_id/campaigns/:id   controllers.Campaigns.show(store_id:Long, id:Long)

# Not Found for any route that is not valid under the API
GET     /api/*file                controllers.Application.notFound(file)

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

# Default to Backbone Navigation
GET     /             controllers.Application.root
GET     /*file        controllers.Application.index(file)
